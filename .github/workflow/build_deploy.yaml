name: Build and deploy dev
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and set node
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false    

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
    
      - name: build-static
        run: pnpm build
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/dev
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2  

      - name: Setup docker buildx for support more platforms
        uses: docker/setup-buildx-action@v2
        with: 
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: deploy to tencent
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.TENCENT_CLOUD_IP }} #云服务器的ip
      #     username: ${{ secrets.TENCENT_CLOUD_NAME }} #云服务器的用户名
      #     password: ${{ secrets.TENCENT_CLOUD_PASSWORD }} #云服务器的密码
      #     script: cd ~ && cd ./shell && sh deploy-blog.sh